

#include <iostream>
using namespace std;
# define size 100


char* Mystrcpy(char* s1, const char* s2) {
    int i;
    for (i = 0; s2[i] != '\0'; i++)
    {
        s1[i] = s2[i];
    }
    s1[i] = '\0';
    return s1;
}


  char* Mystrncpy(char* s1, const char* s2, int n) {

    for (int i = 0; i < n; i++) {
        *s1 = *s2;
        *s1++;
        *s2++;
    }
    *s1 = '\0';
    return s1;

}


  char* Mystrcat(char* s1, const char* s2) {

    while (*s1 != '\0')
          {
              *s1++;
          }

    while (*s2 != '\0')
     {
        *s1 = *s2;

        *s1++;
        *s2++;
          }
    *s1 = '\0';
          return s1;
      }


  char* Mystrncat(char* s1, const char* s2, size_t n) {

     while (*s1 != '\0')
      {
          *s1++;
      }

      for(int j=0;j<n;j++)
      {
          *s1 = *s2;

          *s1++;
          *s2++;
      }
      *s1 = '\0';
      return s1;
  }


  int Mystrcmp(const char* s1, const char* s2) {
      int value=0;
      while (*s2 && *s1) {
          if (*s1 == *s2) {
              *s1++;
              *s2++;
          }
          else if (*s1 > *s2) {
              *s1++;
              *s2++;
              value++;
          }
          else {
              value--;
              *s1++;
              *s2++;
          }
        
      
      }

      return value;
  }


  int Mystrncmp(const char* s1, const char* s2, size_t n) {

      int value = 0;
      for (int i = 0; i < n; i++) {
          if (*s1 == *s2) {
              *s1++;
              *s2++;
          }
          else if (*s1 > *s2) {
              *s1++;
              *s2++;
              value++;
          }
          else {
              value--;
              *s1++;
              *s2++;
          }


      }

      return value;
  }

  size_t Mystrlen(const char* s2) {
      int length = 0;
      for (int k = 0; s2[k] != '\0'; k++) {
          length++;
      }

      return length;
  }
  
  
  char* Mystrtok(char* s1, const char* s2) {
      static char* temp = s1;
      char token[size];
      static int i = 0;
      int j = 0;
      while (temp[i] != '/0') {
          token[j] = temp[i];
          if (temp[i] == *s2) {
              i++;
                  break;
          }
          i++;
          j++;
      
      }
      for (int k = 0; k < j; k++) {
          cout << token[k];
      }
      cout << endl;
      return &temp[0];

  }
 
